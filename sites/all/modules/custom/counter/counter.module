<?php
// $Id$

/**
 * Implementation of hook_menu.
 */
function counter_menu() {
  $items = array();
  
  $items['node/%node/counter'] = array(
    'title' => 'Counter',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('counter_form', 1),
    'access arguments' => array('access content'),
    'type' => MENU_LOCAL_TASK,
    'weight' => 5
  );
  
  return $items;
}

/**
 * Page callback for the counter tab.
 */
function counter_form(&$form_state, $node) {
  global $user;

  // Display view count information.
  $view_count = counter_get_count($node->nid, $user->uid);
  $form = array();
  $form['view_count'] = array(
    '#type' => 'textfield',
    '#title' => t('Counter'),
    '#default_value' => $view_count,
    '#description' => t('Enter a counter value for this node.'),
  );
  $form['nid'] = array(
    '#type' => 'value',
    '#value' => $node->nid,
  );
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Submit'),
  );
  return $form;
}

/**
 * Submit handler.
 */
function counter_form_submit(&$form, &$form_state) {
  global $user;
  $view_count = $form_state['values']['view_count'];
  $nid = $form_state['values']['nid'];
  $uid = $user->uid;
  
  counter_set_count($view_count, $nid, $uid); 
    
  $form_state['redirect'] = 'node/'. $nid;
}

/**
 * Implementation of hook_nodeapi().
 */
function counter_nodeapi(&$node, $op, $teaser = FALSE, $page = FALSE) {
  global $user;

  if ($op == 'view' && $page) {
    // Retrieve the current count.
    $view_count = counter_get_count($node->nid, $user->uid);

    // Add the view count information to the node content.
    $node->content['node_views'] = array(
      '#value' => t('Your counter value for this page is %num.', array('%num' => $view_count)),
      '#weight' => 10,
    );
  }
}

/**
 * Get a view count for a node.
 */
function counter_get_count($nid, $uid) {
  $result = db_query("SELECT view_count FROM {counter} WHERE nid = %d AND uid = %d", $nid, $uid);
  return (int) db_result($result);
}
/**
 * Set a view count for a node.
 */
function counter_set_count($view_count, $nid, $uid) {
  // Try to update an existing row.
  db_query("UPDATE {counter} SET view_count = %d WHERE nid = %d AND uid = %d", $view_count, $nid, $uid);        
  // If no rows were updated, a row doesn't exist yet for this user.
  if (db_affected_rows() == 0) {
    db_query("INSERT INTO {counter} (nid, uid, view_count) VALUES (%d, %d, %d)", $nid, $uid, $view_count);
  }
}